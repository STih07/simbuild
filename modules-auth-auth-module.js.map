{"version":3,"sources":["./apps/sim/src/app/modules/auth/components/login/login.component.ts","./apps/sim/src/app/modules/auth/components/login/login.component.html","./apps/sim/src/app/modules/auth/auth.module.ts"],"names":[],"mappings":"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","file":"modules-auth-auth-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { AuthService } from '../../services/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'sim-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup = this.fb.group({\r\n    email: ['', [Validators.email, Validators.required]],\r\n    password: ['', [Validators.minLength(5), Validators.required]],\r\n    remember: [true]\r\n  })\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private translateService: TranslateService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  login(): void {\r\n\r\n    const data = {\r\n      email: this.loginForm.value['email'],\r\n      password: this.loginForm.value['password']\r\n    }\r\n\r\n    this.authService.login(data, this.loginForm.value['remember']).subscribe((res) => {\r\n      this.router.navigateByUrl('clients')\r\n    });\r\n  }\r\n}\r\n","<nb-layout>\r\n\r\n  <nb-layout-column class=\"d-lg-block d-none m-auto\">\r\n    <img src=\"assets/logo.png\" width=\"700\">\r\n  </nb-layout-column>\r\n  <nb-layout-column class=\"m-auto\">\r\n\r\n    <div class=\"col-6 mx-auto\">\r\n\r\n      <h1 id=\"title\" class=\"title\">{{ \"auth.title\" | translate }}</h1>\r\n\r\n      <form (ngSubmit)=\"login()\" [formGroup]=\"loginForm\" aria-labelledby=\"title\">\r\n\r\n        <div class=\"form-control-group\">\r\n\r\n          <label class=\"label\" for=\"email\">{{ \"auth.email.label\" | translate }}:</label>\r\n\r\n          <input nbInput fullWidth formControlName=\"email\" id=\"email\" [placeholder]=\"'auth.email.placeholder' | translate\"\r\n            [class.border-danger]=\"loginForm.controls.email.invalid && loginForm.controls.email.touched ? true : null\">\r\n\r\n          <ng-container *ngIf=\"loginForm.controls.email.invalid && loginForm.controls.email.touched\">\r\n\r\n            <p class=\"caption status-danger mt-1 mb-2\" *ngIf=\"loginForm.controls.email.errors?.required\">\r\n              {{ \"auth.email.required\" | translate }}!\r\n            </p>\r\n\r\n            <p class=\"caption status-danger mt-1\" *ngIf=\"loginForm.controls.email.errors?.email\">\r\n              {{ \"auth.email.shouldbe\" | translate }}!\r\n            </p>\r\n\r\n          </ng-container>\r\n\r\n        </div>\r\n\r\n        <div class=\"form-control-group mt-3\">\r\n          <label class=\"label\" for=\"password\">{{ \"auth.password.label\" | translate }}:</label>\r\n\r\n          <input nbInput fullWidth type=\"password\" formControlName=\"password\" id=\"password\"\r\n            [placeholder]=\"'auth.password.placeholder' | translate\"\r\n            [class.border-danger]=\"loginForm.controls.password.invalid && loginForm.controls.password.touched ? true : null\">\r\n\r\n          <ng-container *ngIf=\"loginForm.controls.password.invalid && loginForm.controls.password.touched\">\r\n\r\n            <p class=\"caption status-danger mt-1\">\r\n              {{ \"auth.password.required\" | translate }}!\r\n            </p>\r\n\r\n          </ng-container>\r\n\r\n        </div>\r\n\r\n        <div class=\"form-control-group accept-group d-flex align-items-center justify-content-between my-4\">\r\n\r\n          <nb-checkbox name=\"rememberMe\" formControlName=\"remember\">{{ \"auth.remember-me\" | translate }}</nb-checkbox>\r\n\r\n<!--          <a class=\"forgot-password\" routerLink=\"../request-password\">{{ \"auth.forgot-password\" | translate }}?</a>-->\r\n\r\n        </div>\r\n\r\n        <button nbButton fullWidth status=\"success\" [disabled]=\"!loginForm.valid\">\r\n          {{ \"auth.singin\" | translate }}\r\n        </button>\r\n\r\n      </form>\r\n\r\n    </div>\r\n\r\n  </nb-layout-column>\r\n\r\n</nb-layout>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { NbAlertModule, NbInputModule, NbButtonModule, NbCheckboxModule, NbLayoutModule } from '@nebular/theme';\r\n\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nimport { LoginComponent } from './components/login/login.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n  CommonModule,\r\n    RouterModule.forChild(routes),\r\n    NbLayoutModule,\r\n    NbAlertModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbCheckboxModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule\r\n  ],\r\n  providers: []\r\n})\r\nexport class AuthModule { }\r\n"],"sourceRoot":"webpack:///"}