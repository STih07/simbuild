{"version":3,"sources":["./apps/sim/src/app/modules/countries/countries.module.ts","./apps/sim/src/app/modules/countries/components/country-manager/country-manager.component.ts","./apps/sim/src/app/modules/countries/components/country-manager/country-manager.component.html","./apps/sim/src/app/modules/countries/components/countries/countries.component.ts","./apps/sim/src/app/modules/countries/components/countries/countries.component.html"],"names":[],"mappings":"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","file":"modules-countries-countries-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { NbCardModule, NbIconModule, NbInputModule, NbLayoutModule, NbButtonModule, NbSelectModule } from '@nebular/theme';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\n\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nimport { SharedModule } from '@shared/shared.module';\r\n\r\nimport { CountriesComponent } from './components/countries/countries.component';\r\nimport { CountryManagerComponent } from './components/country-manager/country-manager.component';\r\nimport { CountriesService } from './services/countries/countries.service';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: CountriesComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [CountriesComponent, CountryManagerComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    TranslateModule,\r\n    NbLayoutModule,\r\n    NbCardModule,\r\n    NbIconModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbSelectModule,\r\n    Ng2SmartTableModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [CountriesService]\r\n})\r\nexport class CountriesModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Company } from '@models/companies/company';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'sim-country-manager',\r\n  templateUrl: './country-manager.component.html',\r\n  styleUrls: ['./country-manager.component.css']\r\n})\r\nexport class CountryManagerComponent implements OnInit {\r\n\r\n  @Input() countryData?: Company;\r\n\r\n  countryForm: FormGroup\r\n\r\n  constructor(private fb: FormBuilder, private activeModal: NgbActiveModal) { }\r\n\r\n  ngOnInit(): void {\r\n    this.countryForm = this.fb.group({\r\n      name: [this.countryData?.name, [Validators.maxLength(50), Validators.required]],\r\n    })    \r\n  }\r\n\r\n  onSubmit(): void {\r\n    const resultData = this.countryForm.value;\r\n    resultData.id = this.countryData?.id;\r\n    this.activeModal.close({ country: resultData, isCreate: this.countryData ? false : true });\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.activeModal.close();\r\n  }\r\n\r\n}\r\n","<nb-layout class=\"country-modal__wrapper\">\r\n\r\n  <nb-layout-column class=\"bg-white\">\r\n\r\n    <h4>{{ countryData ? ('countries.modal.title_edit' | translate) : ('countries.modal.title_create' | translate) }}</h4>\r\n\r\n    <form [formGroup]=\"countryForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n      <div class=\"form-control-group mt-2 mb-4\">\r\n\r\n        <label class=\"label\" for=\"name\">{{ \"countries.modal.name\" | translate }}:</label>\r\n\r\n        <input nbInput fullWidth formControlName=\"name\" id=\"name\"\r\n          [class.border-danger]=\"countryForm.controls.name.touched && countryForm.controls.name.invalid\"\r\n          [placeholder]=\"'countries.modal.placeholders.name' | translate\">\r\n\r\n        <!-- <nb-select fullWidth placeholder=\"Form control\" [formControl]=\"countryForm.controls.name\" id=\"name\"\r\n          [class.border-danger]=\"countryForm.controls.name.touched && countryForm.controls.name.invalid\"\r\n          [placeholder]=\"'countries.modal.placeholders.name' | translate\">\r\n          <nb-option *ngFor=\"let role of roles\" [value]=\"role\">{{role}}</nb-option>\r\n        </nb-select> -->\r\n\r\n        <sim-error-validator [control]=\"countryForm.controls.name\"></sim-error-validator>\r\n\r\n      </div>\r\n\r\n      <div class=\"d-flex justify-content-between\">\r\n\r\n        <button class=\"mb-2\" nbButton status=\"danger\" (click)=\"onCancel()\" type=\"button\">\r\n          {{ \"countries.modal.button_cancel\" | translate }}\r\n        </button>\r\n\r\n        <button class=\"mb-2\" nbButton status=\"primary\" [disabled]=\"!countryForm.valid\" type=\"submit\">\r\n          {{ \"countries.modal.button_submit\" | translate }}\r\n        </button>\r\n\r\n      </div>\r\n\r\n\r\n    </form>\r\n\r\n  </nb-layout-column>\r\n\r\n</nb-layout>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { environment } from '@environments/environment';\r\nimport { Country } from '@models/coutries/country';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslateService, TranslationChangeEvent } from '@ngx-translate/core';\r\nimport { DeleteModalComponent } from '@shared/components/delete-modal/delete-modal.component';\r\nimport { ServerDataSource } from 'ng2-smart-table';\r\nimport { CountriesService } from './../../services/countries/countries.service';\r\nimport { CountryManagerComponent } from './../country-manager/country-manager.component';\r\n\r\n@Component({\r\n  selector: 'sim-countries',\r\n  templateUrl: './countries.component.html',\r\n  styleUrls: ['./countries.component.css']\r\n})\r\nexport class CountriesComponent implements OnInit {\r\n\r\n  source: ServerDataSource;\r\n\r\n  settings: any;\r\n\r\n  constructor(private translateService: TranslateService, private modalService: NgbModal, private countriesService: CountriesService, private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.translateService.onLangChange.subscribe((res: TranslationChangeEvent) => {\r\n      this.translateService.use(res.lang)\r\n      this.initTableSettings();\r\n    });\r\n    this.initTableSettings();\r\n    this.source = new ServerDataSource(\r\n      this.http, {\r\n      endPoint: environment.api_prefix + 'country',\r\n      totalKey: 'total',\r\n      dataKey: 'data',\r\n      pagerPageKey: 'page',\r\n      pagerLimitKey: 'limit',\r\n    });\r\n\r\n  }\r\n\r\n  onDeleteConfirm(event: any): void {\r\n    const deleteModal = this.modalService.open(DeleteModalComponent, {\r\n      centered: true\r\n    })\r\n    deleteModal.componentInstance.name = event.data.name;\r\n\r\n    deleteModal.result.then((result: boolean) => {\r\n      if (result) {\r\n        this.countriesService.deleteCountry(event.data).subscribe(() => this.source.refresh())\r\n      }\r\n    }).catch(err => { });\r\n\r\n  }\r\n\r\n  initTableSettings(): void {\r\n    this.settings = {\r\n      pager: {\r\n        display: true,\r\n        perPage: 20\r\n      },\r\n      actions: {\r\n        columnTitle: '',\r\n        edit: false\r\n      },\r\n      hideSubHeader: true,\r\n      delete: {\r\n        deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n        confirmDelete: true,\r\n        width: '20px'\r\n      },\r\n      columns: {\r\n        name: {\r\n          title: this.translateService.instant('countries.table.name'),\r\n          type: 'string'\r\n        },\r\n      }\r\n    };\r\n  }\r\n\r\n  openModal(countryData?: Country) {\r\n    const countryManager = this.modalService.open(CountryManagerComponent, {\r\n      centered: true\r\n    })\r\n\r\n    if (countryData) {\r\n      countryManager.componentInstance.countryData = countryData;\r\n    }\r\n\r\n    countryManager.result.then((data: { country: Country; isCreate: boolean; }) => {\r\n\r\n      if (data) {\r\n\r\n        if (data.isCreate) {\r\n\r\n          this.countriesService.addCountry(data.country).subscribe(() => this.source.refresh())\r\n\r\n        } else {\r\n\r\n          this.countriesService.updateCountry(data.country).subscribe(() => this.source.refresh())\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }).catch(err => { })\r\n  }\r\n\r\n\r\n  // loadCountries(): void {\r\n  //   this.countriesService.getCountries().subscribe((countries) => this.source.refresh());\r\n  // }\r\n\r\n}\r\n","<nb-card>\r\n  <nb-card-header>\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n      {{ \"countries.title\" | translate}}\r\n      <button class=\"btn btn-sm btn-primary\" (click)=\"openModal()\">{{ 'countries.modal.button_open' | translate }}</button>\r\n    </div>\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table [settings]=\"settings\" [source]=\"source\" (deleteConfirm)=\"onDeleteConfirm($event)\" (userRowSelect)=\"openModal($event.data)\">\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>\r\n"],"sourceRoot":"webpack:///"}