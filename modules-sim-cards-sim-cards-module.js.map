{"version":3,"sources":["./apps/sim/src/app/modules/sim-cards/components/sim-card-manager/sim-card-manager.component.ts","./apps/sim/src/app/modules/sim-cards/components/sim-card-manager/sim-card-manager.component.html","./apps/sim/src/app/modules/sim-cards/components/sim-cards/sim-cards.component.ts","./apps/sim/src/app/modules/sim-cards/components/sim-cards/sim-cards.component.html","./apps/sim/src/app/modules/sim-cards/sim-cards.module.ts"],"names":[],"mappings":"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","file":"modules-sim-cards-sim-cards-module.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SimCard } from '@models/sim-cards/sim-card';\r\nimport { CompaniesService } from './../../../companies/services/companies/companies.service';\r\nimport { Company } from '@models/companies/company';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'sim-sim-card-manager',\r\n  templateUrl: './sim-card-manager.component.html',\r\n  styleUrls: ['./sim-card-manager.component.css']\r\n})\r\nexport class SimCardManagerComponent implements OnInit {\r\n\r\n  @Input() simsData?: SimCard;\r\n\r\n  companies$: Observable<Company[]> = this.companyService.getCompanies().pipe(map(res => res.data));\r\n\r\n  simCardForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder, private activeModal: NgbActiveModal, private companyService: CompaniesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.simCardForm = this.fb.group({\r\n      code: [this.simsData?.code, [Validators.required]],\r\n      company: [this.simsData?.company.id, [Validators.required]],\r\n      model: [this.simsData?.model, [Validators.required]],\r\n      number: [this.simsData?.number, [Validators.required]],\r\n      isr_number: [this.simsData?.isr_number, [Validators.required]],\r\n      // active: [this.simsData?.active, [Validators.required]],\r\n      chargeDate: [this.simsData?.chargeDate, [Validators.required]],\r\n    })\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const resultData = this.simCardForm.value;\r\n    resultData.id = this.simsData?.id;\r\n    resultData.chargeDate = moment(resultData.chargeDate).toISOString();\r\n    resultData.active = true;\r\n    this.activeModal.close({ sims: resultData, isCreate: this.simsData ? false : true });\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.activeModal.close();\r\n  }\r\n\r\n}\r\n","<nb-layout class=\"sims-modal__wrapper\">\r\n\r\n  <nb-layout-column class=\"bg-white\">\r\n\r\n    <h4>{{ simsData ? ('sim_cards.modal.title_edit' | translate) : ('sim_cards.modal.title_create' | translate) }}\r\n    </h4>\r\n\r\n    <form [formGroup]=\"simCardForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n      <div class=\"form-control-group mt-2\">\r\n        <label class=\"label\" for=\"code\">{{ \"sim_cards.modal.code\" | translate }}:</label>\r\n        <input nbInput fullWidth formControlName=\"code\" id=\"code\"\r\n          [class.border-danger]=\"simCardForm.controls.code.touched && simCardForm.controls.code.invalid\"\r\n          [placeholder]=\"'sim_cards.modal.placeholders.code' | translate\">\r\n        <sim-error-validator [control]=\"simCardForm.controls.code\"></sim-error-validator>\r\n\r\n      </div>\r\n\r\n      <div>\r\n        <label class=\"label\" for=\"company\">{{ \"clients.modal.company\" | translate }}:</label>\r\n        <nb-select fullWidth placeholder=\"Form control\" [formControl]=\"simCardForm.controls.company\" id=\"company\"\r\n          [class.border-danger]=\"simCardForm.controls.company.touched && simCardForm.controls.company.invalid\"\r\n          [placeholder]=\"'clients.modal.placeholders.company' | translate\">\r\n          <nb-option *ngFor=\"let company of companies$ | async\" [value]=\"company.id\">{{company.name}}</nb-option>\r\n        </nb-select>\r\n        <sim-error-validator [control]=\"simCardForm.controls.company\"></sim-error-validator>\r\n\r\n      </div>\r\n\r\n\r\n      <div class=\"form-control-group mt-2\">\r\n        <label class=\"label\" for=\"model\">{{ \"sim_cards.modal.model\" | translate }}:</label>\r\n        <input nbInput fullWidth formControlName=\"model\" id=\"model\"\r\n          [class.border-danger]=\"simCardForm.controls.model.touched && simCardForm.controls.model.invalid\"\r\n          [placeholder]=\"'sim_cards.modal.placeholders.model' | translate\">\r\n        <sim-error-validator [control]=\"simCardForm.controls.model\"></sim-error-validator>\r\n\r\n      </div>\r\n\r\n      <div class=\"form-control-group mt-2\">\r\n        <label class=\"label\" for=\"number\">{{ \"sim_cards.modal.number\" | translate }}:</label>\r\n        <input nbInput fullWidth formControlName=\"number\" id=\"number\"\r\n          [class.border-danger]=\"simCardForm.controls.number.touched && simCardForm.controls.number.invalid\"\r\n          [placeholder]=\"'sim_cards.modal.placeholders.number' | translate\">\r\n        <sim-error-validator [control]=\"simCardForm.controls.number\"></sim-error-validator>\r\n\r\n      </div>\r\n\r\n      <div class=\"form-control-group mt-2\">\r\n        <label class=\"label\" for=\"isr_number\">{{ \"sim_cards.modal.isr_number\" | translate }}:</label>\r\n        <input nbInput fullWidth formControlName=\"isr_number\" id=\"isr_number\"\r\n          [class.border-danger]=\"simCardForm.controls.isr_number.touched && simCardForm.controls.isr_number.invalid\"\r\n          [placeholder]=\"'sim_cards.modal.placeholders.isr_number' | translate\">\r\n        <sim-error-validator [control]=\"simCardForm.controls.isr_number\"></sim-error-validator>\r\n\r\n      </div>\r\n\r\n      <!-- <div class=\"form-control-group mt-2\">\r\n        <label class=\"label\" for=\"active\">{{ \"sim_cards.modal.active\" | translate }}:</label>\r\n        <input nbInput fullWidth formControlName=\"active\" id=\"active\"\r\n          [placeholder]=\"'sim_cards.modal.placeholders.active' | translate\">\r\n      </div> -->\r\n\r\n      <!-- <div class=\"form-control-group mt-2 mb-5\">\r\n        <label class=\"label\" for=\"chargeDate\">{{ \"sim_cards.modal.charge_date\" | translate }}:</label>\r\n        <input nbInput fullWidth formControlName=\"chargeDate\" id=\"chargeDate\"\r\n          [placeholder]=\"'sim_cards.modal.placeholders.charge_date' | translate\">\r\n      </div> -->\r\n\r\n      <div class=\"form-control-group mt-2 mb-4\">\r\n        <sim-heb-datepicker [control]=\"simCardForm.controls.chargeDate\"\r\n          [label]=\"'sim_cards.modal.placeholders.charge_date' | translate\"></sim-heb-datepicker>\r\n        <sim-error-validator [control]=\"simCardForm.controls.chargeDate\"></sim-error-validator>\r\n      </div>\r\n\r\n      <div class=\"d-flex justify-content-between mb-2\">\r\n\r\n        <button class=\"\" nbButton status=\"danger\" (click)=\"onCancel()\" type=\"button\">\r\n          {{ \"sim_cards.modal.button_cancel\" | translate }}\r\n        </button>\r\n\r\n        <button class=\"\" nbButton status=\"primary\" [disabled]=\"simCardForm.invalid\" type=\"submit\">\r\n          {{ \"sim_cards.modal.button_submit\" | translate }}\r\n        </button>\r\n\r\n      </div>\r\n\r\n    </form>\r\n\r\n  </nb-layout-column>\r\n\r\n</nb-layout>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from '@environments/environment';\r\n\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { TranslateService, TranslationChangeEvent } from '@ngx-translate/core';\r\n\r\nimport { ServerDataSource } from 'ng2-smart-table';\r\n\r\nimport { DeleteModalComponent } from '@shared/components/delete-modal/delete-modal.component';\r\nimport { SimCardsService } from './../../services/sim-cards/sim-cards.service';\r\nimport { SimCardManagerComponent } from './../sim-card-manager/sim-card-manager.component';\r\nimport { SimCard } from '@models/sim-cards/sim-card';\r\nimport { CustomServerDataSource } from '@shared/server-data-source';\r\nimport { Company } from '@models/companies/company';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'sim-sim-cards',\r\n  templateUrl: './sim-cards.component.html',\r\n  styleUrls: ['./sim-cards.component.css']\r\n})\r\nexport class SimCardsComponent implements OnInit {\r\n  source: ServerDataSource;\r\n\r\n  settings: any;\r\n\r\n  constructor(\r\n    private translateService: TranslateService,\r\n    private modalService: NgbModal,\r\n    private simCardsService: SimCardsService,\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.translateService.onLangChange.subscribe((res: TranslationChangeEvent) => {\r\n      this.translateService.use(res.lang)\r\n      this.initTableSettings();\r\n    });\r\n\r\n    this.initTableSettings();\r\n\r\n    this.source = new CustomServerDataSource(\r\n      this.http, {\r\n      endPoint: environment.api_prefix + 'sims',\r\n      totalKey: 'total',\r\n      dataKey: 'data',\r\n      pagerPageKey: 'page',\r\n      pagerLimitKey: 'limit',\r\n    }, [{ key: 'join', value: 'company' }]);\r\n\r\n  }\r\n\r\n  onDeleteConfirm(event: any): void {\r\n    const deleteModal = this.modalService.open(DeleteModalComponent, {\r\n      centered: true\r\n    })\r\n    console.log(event.data);\r\n\r\n    deleteModal.componentInstance.name = event.data.model;\r\n\r\n    deleteModal.result.then((result: boolean) => {\r\n      if (result) {\r\n        this.simCardsService.deleteSimCard(event.data).subscribe(() => this.loadOrders())\r\n      }\r\n    }).catch(err => { });\r\n\r\n  }\r\n\r\n  initTableSettings(): void {\r\n    this.settings = {\r\n      pager: {\r\n        display: true,\r\n        perPage: 5\r\n      },\r\n      actions: {\r\n        columnTitle: '',\r\n        edit: false\r\n      },\r\n      hideSubHeader: true,\r\n      delete: {\r\n        deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n        confirmDelete: true,\r\n      },\r\n      columns: {\r\n        model: {\r\n          title: this.translateService.instant('sim_cards.table.model'),\r\n          type: 'string'\r\n        },\r\n        code: {\r\n          title: this.translateService.instant('sim_cards.table.code'),\r\n          type: 'string'\r\n        },\r\n        company: {\r\n          title: this.translateService.instant('sim_cards.table.company'),\r\n          type: 'string',\r\n          valuePrepareFunction: (val: Company) => val.name\r\n        },\r\n        number: {\r\n          title: this.translateService.instant('sim_cards.table.number'),\r\n          type: 'string'\r\n        },\r\n        isr_number: {\r\n          title: this.translateService.instant('sim_cards.table.isr_number'),\r\n          type: 'string'\r\n        },\r\n        active: {\r\n          title: this.translateService.instant('sim_cards.table.active'),\r\n          type: 'boolean',\r\n          valuePrepareFunction: (active: boolean) => active ? 'Active' : 'Inactive'\r\n        },\r\n        chargeDate: {\r\n          title: this.translateService.instant('sim_cards.table.charge_date'),\r\n          type: 'Date',\r\n          valuePrepareFunction: (val: Date) => moment(val).format('YYYY-MM-DD')\r\n        }\r\n      },\r\n    };\r\n  }\r\n\r\n  openModal(simsData?: SimCard) {\r\n    const addClientModal = this.modalService.open(SimCardManagerComponent, {\r\n      centered: true\r\n    })\r\n\r\n    if (simsData) {\r\n      addClientModal.componentInstance.simsData = simsData;\r\n    }\r\n\r\n    addClientModal.result.then((data: { sims: SimCard; isCreate: boolean; }) => {\r\n\r\n      if (data) {\r\n\r\n        if (data.isCreate) {\r\n\r\n          this.simCardsService.createSimCard(data.sims).subscribe(() => this.loadOrders())\r\n\r\n        } else {\r\n\r\n          this.simCardsService.createSimCard(data.sims).subscribe(() => this.loadOrders())\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }).catch(err => { })\r\n  }\r\n\r\n  loadOrders(): void {\r\n    this.simCardsService.getSimCards().subscribe(() => this.source.refresh());\r\n  }\r\n\r\n}\r\n","<nb-card>\r\n  <nb-card-header>\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n      {{ \"sim_cards.title\" | translate}}\r\n      <button class=\"btn btn-sm btn-primary\" (click)=\"openModal()\">{{ 'sim_cards.modal.button_open' | translate }}</button>\r\n    </div>\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table [settings]=\"settings\" [source]=\"source\" (deleteConfirm)=\"onDeleteConfirm($event)\" (userRowSelect)=\"openModal($event.data)\">\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SimCardsComponent } from './components/sim-cards/sim-cards.component';\r\nimport { SimCardManagerComponent } from './components/sim-card-manager/sim-card-manager.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NbLayoutModule, NbCardModule, NbIconModule, NbInputModule, NbButtonModule, NbSelectModule } from '@nebular/theme';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: SimCardsComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [SimCardsComponent, SimCardManagerComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    TranslateModule,\r\n    NbLayoutModule,\r\n    NbCardModule,\r\n    NbIconModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbSelectModule,\r\n    Ng2SmartTableModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class SimCardsModule { }\r\n"],"sourceRoot":"webpack:///"}