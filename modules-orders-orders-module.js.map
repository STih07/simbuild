{"version":3,"sources":["./apps/sim/src/app/modules/orders/orders.module.ts","./apps/sim/src/app/modules/orders/components/orders/orders.component.ts","./apps/sim/src/app/modules/orders/components/orders/orders.component.html","./apps/sim/src/app/modules/orders/components/order-manager/order-manager.component.ts","./apps/sim/src/app/modules/orders/components/order-manager/order-manager.component.html","./apps/sim/src/app/modules/orders/services/orders/orders.service.ts"],"names":[],"mappings":"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","file":"modules-orders-orders-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OrdersComponent } from './components/orders/orders.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NbLayoutModule, NbCardModule, NbIconModule, NbInputModule, NbButtonModule, NbSelectModule } from '@nebular/theme';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { OrderManagerComponent } from './components/order-manager/order-manager.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: OrdersComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [OrdersComponent, OrderManagerComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    TranslateModule,\r\n    NbLayoutModule,\r\n    NbCardModule,\r\n    NbIconModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbSelectModule,\r\n    Ng2SmartTableModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class OrdersModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from '@environments/environment';\r\n\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { TranslateService, TranslationChangeEvent } from '@ngx-translate/core';\r\n\r\nimport { ServerDataSource } from 'ng2-smart-table';\r\n\r\nimport { DeleteModalComponent } from '@shared/components/delete-modal/delete-modal.component';\r\n\r\nimport { OrderManagerComponent } from '../order-manager/order-manager.component';\r\nimport { OrdersService } from '../../services/orders/orders.service';\r\nimport { Order } from '@models/orders/order';\r\nimport { CustomServerDataSource } from '@shared/server-data-source';\r\nimport { ClientCard } from '@models/clients/client-card';\r\nimport * as moment from 'moment';\r\nimport { Company } from '@models/companies/company';\r\nimport { Country } from '@models/coutries/country';\r\nimport { SimCard } from '@models/sim-cards/sim-card';\r\n\r\n@Component({\r\n  selector: 'sim-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.css']\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n  source: ServerDataSource;\r\n\r\n  settings: any;\r\n\r\n  constructor(\r\n    private translateService: TranslateService,\r\n    private modalService: NgbModal,\r\n    private ordersService: OrdersService,\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.translateService.onLangChange.subscribe((res: TranslationChangeEvent) => {\r\n      this.translateService.use(res.lang)\r\n      this.initTableSettings();\r\n    });\r\n\r\n    this.initTableSettings();\r\n\r\n    this.source = new CustomServerDataSource(\r\n      this.http, {\r\n      endPoint: environment.api_prefix + 'orders',\r\n      totalKey: 'total',\r\n      dataKey: 'data',\r\n      pagerPageKey: 'page',\r\n      pagerLimitKey: 'limit'\r\n    }, [\r\n      {key: 'join[]', value: 'client'},\r\n      {key: 'join[]', value: 'company'},\r\n      {key: 'join[]', value: 'creator'},\r\n      {key: 'join[]', value: 'item'},\r\n      {key: 'join[]', value: 'country'}\r\n      ]);\r\n\r\n  }\r\n\r\n  onDeleteConfirm(event: any): void {\r\n    const deleteModal = this.modalService.open(DeleteModalComponent, {\r\n      centered: true\r\n    })\r\n    deleteModal.componentInstance.name = '#' + event.data.id;\r\n\r\n    deleteModal.result.then((result: boolean) => {\r\n      if (result) {\r\n        this.ordersService.deleteOrder(event.data).subscribe(() => this.loadOrders())\r\n      }\r\n    }).catch(err => { });\r\n\r\n  }\r\n\r\n  initTableSettings(): void {\r\n    this.settings = {\r\n      pager: {\r\n        display: true,\r\n        perPage: 20\r\n      },\r\n      actions: {\r\n        columnTitle: '',\r\n        edit: false\r\n      },\r\n      hideSubHeader: true,\r\n      delete: {\r\n        deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n        confirmDelete: true,\r\n      },\r\n      columns: {\r\n        client: {\r\n          title: this.translateService.instant('orders.table.client'),\r\n          type: 'string',\r\n          valuePrepareFunction: (client: ClientCard) => `${client.name} ${client.surname}`\r\n        },\r\n        phone: {\r\n          title: this.translateService.instant('orders.table.phone'),\r\n          type: 'string'\r\n        },\r\n        createDate: {\r\n          title: this.translateService.instant('orders.table.create_date'),\r\n          type: 'Date',\r\n          valuePrepareFunction: (date: Date) => moment(date).format('YYYY-MM-DD')\r\n        },\r\n        creator: {\r\n          title: this.translateService.instant('orders.table.creator'),\r\n          type: 'string',\r\n          valuePrepareFunction: (creator: any) => creator.name\r\n        },\r\n        item: {\r\n          title: this.translateService.instant('orders.table.item'),\r\n          type: 'string',\r\n          valuePrepareFunction: (item: SimCard) => item.code\r\n        },\r\n        company: {\r\n          title: this.translateService.instant('orders.table.company'),\r\n          type: 'string',\r\n          valuePrepareFunction: (company: Company) => company.name\r\n        },\r\n        country: {\r\n          title: this.translateService.instant('orders.table.country'),\r\n          type: 'string',\r\n          valuePrepareFunction: (country: Country) => country.name\r\n        },\r\n        startRental: {\r\n          title: this.translateService.instant('orders.table.start_rental'),\r\n          type: 'Date',\r\n          valuePrepareFunction: (date: Date) => moment(date).format('YYYY-MM-DD')\r\n        },\r\n        endRental: {\r\n          title: this.translateService.instant('orders.table.end_rental'),\r\n          type: 'Date',\r\n          valuePrepareFunction: (date: Date) => moment(date).format('YYYY-MM-DD')\r\n        },\r\n        // totalRental: {\r\n        //   title: this.translateService.instant('orders.table.total_rental'),\r\n        //   type: 'number',\r\n        //   valuePrepareFunction: (date: Date) =>\r\n        // },\r\n        price: {\r\n          title: this.translateService.instant('orders.table.price'),\r\n          type: 'number',\r\n          valuePrepareFunction: (value: number) => '$' + value\r\n        },\r\n        returnDate: {\r\n          title: this.translateService.instant('orders.table.return_date'),\r\n          type: 'Date',\r\n          valuePrepareFunction: (date: Date) => moment(date).format('YYYY-MM-DD')\r\n        }\r\n      },\r\n    };\r\n  }\r\n\r\n  openModal(orderData?: Order) {\r\n    const addClientModal = this.modalService.open(OrderManagerComponent, {\r\n      centered: true\r\n    })\r\n\r\n    if (orderData) {\r\n      addClientModal.componentInstance.orderData = orderData;\r\n    }\r\n\r\n    addClientModal.result.then((data: { order: Order; isCreate: boolean; }) => {\r\n\r\n      if (data) {\r\n\r\n        if (data.isCreate) {\r\n\r\n          this.ordersService.createOrder(data.order).subscribe(() => this.loadOrders())\r\n\r\n        } else {\r\n\r\n          this.ordersService.createOrder(data.order).subscribe(() => this.loadOrders())\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }).catch(err => { })\r\n  }\r\n\r\n  loadOrders(): void {\r\n    this.ordersService.getOrders().subscribe(() => this.source.refresh());\r\n  }\r\n\r\n}\r\n","<nb-card>\r\n  <nb-card-header>\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n      {{ \"orders.title\" | translate}}\r\n      <button class=\"btn btn-sm btn-primary\" (click)=\"openModal()\">{{ 'orders.modal.button_open' | translate }}</button>\r\n    </div>\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table [settings]=\"settings\" [source]=\"source\" (deleteConfirm)=\"onDeleteConfirm($event)\" (userRowSelect)=\"openModal($event.data)\">\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, } from '@angular/forms';\r\nimport { Order } from '@models/orders/order';\r\nimport { NgbActiveModal, NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ClientsService } from './../../../clients/services/clients.service';\r\nimport { CompaniesService } from './../../../companies/services/companies/companies.service';\r\nimport { CountriesService } from './../../../countries/services/countries/countries.service';\r\nimport { map } from 'rxjs/operators';\r\nimport * as moment from 'moment';\r\nimport { SimCardsService } from '../../../sim-cards/services/sim-cards/sim-cards.service';\r\n\r\n\r\n@Component({\r\n  selector: 'sim-order-manager',\r\n  templateUrl: './order-manager.component.html',\r\n  styleUrls: ['./order-manager.component.css']\r\n})\r\nexport class OrderManagerComponent implements OnInit {\r\n\r\n  @Input() orderData?: Order\r\n\r\n  clients$ = this.clientsService.getClients();\r\n  companies$ = this.companiesService.getCompanies().pipe(map(res => res.data));\r\n  countries$ = this.countriesService.getCountries();\r\n  sims$ = this.simService.getSimCards();\r\n\r\n  orderForm: FormGroup;\r\n\r\n  // error: any = { isError: false, errorMessage: '' };\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private activeModal: NgbActiveModal,\r\n    private clientsService: ClientsService,\r\n    private companiesService: CompaniesService,\r\n    private countriesService: CountriesService,\r\n    private simService: SimCardsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.orderForm = this.fb.group({\r\n      client: [this.orderData?.client, [Validators.required]],\r\n      phone: [this.orderData?.phone, [Validators.required]],\r\n      // createDate: [this.orderData?.createDate, [Validators.required]],\r\n      // creator: [this.orderData?.creator, [Validators.required]],\r\n      item: [this.orderData?.item, [Validators.required]],\r\n      company: [this.orderData?.company, [Validators.required]],\r\n      country: [this.orderData?.country, [Validators.required]],\r\n      startRental: [this.orderData?.startRental, [Validators.required]],\r\n      endRental: [this.orderData?.endRental, [Validators.required]],\r\n      price: [this.orderData?.price, [Validators.required]],\r\n      returnDate: [this.orderData?.returnDate, [Validators.required]]\r\n    });\r\n  }\r\n\r\n\r\n  toFormat(date: NgbDate): moment.Moment {\r\n    const dateFormat = \"DD.MM.YYYY\";\r\n    const toFormat = () => `${date.day}.${date.month}.${date.year}`;\r\n    return moment(toFormat(), dateFormat);\r\n  }\r\n  onSubmit(): void {\r\n    const resultData = this.orderForm.value;\r\n    const id = this.orderData?.id;\r\n    const startRental = this.toFormat(resultData.startRental).toISOString();\r\n    const endRental = this.toFormat(resultData.endRental).toISOString();\r\n    const returnDate = this.toFormat(resultData.returnDate).toISOString();\r\n    const creator = 1;\r\n    this.activeModal.close({ order: {\r\n      ...resultData,\r\n        id,\r\n        startRental,\r\n        endRental,\r\n        returnDate,\r\n        creator\r\n      }, isCreate: this.orderData ? false : true });\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.activeModal.close();\r\n  }\r\n\r\n  getTotalRental() {\r\n    const { startRental, endRental } = this.orderForm.value;\r\n    if (startRental && endRental) {\r\n      const start = this.toFormat(startRental);\r\n      const end = this.toFormat(endRental);\r\n      return +(end.diff(start) / 86400000);\r\n    }\r\n  }\r\n\r\n  getStartRental() {\r\n    return this.orderForm.value.startRental;\r\n  }\r\n\r\n  getEndRental() {\r\n    return this.orderForm.value.endRental;\r\n  }\r\n\r\n  // compareTwoDates() {\r\n  //   if (!(new Date(moment(this.orderForm.controls['startRental'].value).toISOString()) < new Date(moment(this.orderForm.controls['endRental'].value).toISOString()))) {\r\n  //     this.error = { isError: true, errorMessage: 'End Date can`t before start date of rental' };\r\n  //   } else {\r\n  //     this.error = { isError: false, errorMessage: '' }\r\n  //     this.orderForm.controls.totalRental.setValue(\r\n  //       +Object.values(this.orderForm.controls.endRental.value).join('') - +Object.values(this.orderForm.controls.startRental.value).join('')\r\n  //     );\r\n  //   }\r\n  // }\r\n}\r\n","<nb-layout>\r\n\r\n  <nb-layout-column class=\"bg-white\">\r\n\r\n    <h4>{{ orderData ? ('orders.modal.title_edit' | translate) : ('orders.modal.title_create' | translate) }}</h4>\r\n\r\n    <form [formGroup]=\"orderForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n      <div class=\"form-control-group mt-2\">\r\n\r\n        <label class=\"label\">{{ \"orders.modal.client\" | translate }}:</label>\r\n\r\n        <div>\r\n          <nb-select fullWidth [placeholder]=\"'orders.modal.placeholders.client' | translate\"\r\n            [formControl]=\"orderForm.controls.client\">\r\n            <nb-option *ngFor=\"let client of clients$ | async\" [value]=\"client.id\">{{client.name}} {{client.surname}}\r\n            </nb-option>\r\n          </nb-select>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-control-group mt-2\">\r\n        <label class=\"label\" for=\"phone\">{{ \"orders.modal.phone\" | translate }}:</label>\r\n        <input nbInput fullWidth formControlName=\"phone\" id=\"phone\"\r\n          [placeholder]=\"'orders.modal.placeholders.phone' | translate\">\r\n      </div>\r\n\r\n      <div class=\"form-control-group mt-2\">\r\n        <label class=\"label\" for=\"item\">{{ \"orders.modal.item\" | translate }}:</label>\r\n        <nb-select fullWidth [formControl]=\"orderForm.controls.item\">\r\n          <nb-option *ngFor=\"let sim of sims$ | async\" [value]=\"sim.id\">{{sim.code}}</nb-option>\r\n        </nb-select>\r\n      </div>\r\n\r\n      <div class=\"form-control-group mt-2\">\r\n        <label class=\"label\">{{ \"orders.modal.company\" | translate }}:</label>\r\n        <nb-select fullWidth [formControl]=\"orderForm.controls.company\"\r\n          [placeholder]=\"'orders.modal.placeholders.company' | translate\">\r\n          <nb-option *ngFor=\"let company of companies$ | async\" [value]=\"company.id\">{{company.name}}</nb-option>\r\n        </nb-select>\r\n      </div>\r\n\r\n      <div class=\"form-control-group mt-2\">\r\n\r\n        <label class=\"label\" for=\"country\">{{ \"companies.modal.country\" | translate }}:</label>\r\n\r\n        <div>\r\n          <nb-select fullWidth [formControl]=\"orderForm.controls.country\"\r\n            [placeholder]=\"'orders.modal.placeholders.country' | translate\">\r\n            <nb-option *ngFor=\"let country of countries$ | async\" [value]=\"country.id\">{{country.name}}</nb-option>\r\n          </nb-select>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n      <div class=\"form-control-group mt-2\">\r\n        <sim-heb-datepicker [maxDate]=\"getEndRental()\" [control]=\"orderForm.controls.startRental\"\r\n          [label]=\"'orders.modal.start_rental' | translate\"></sim-heb-datepicker>\r\n      </div>\r\n\r\n      <div class=\"form-control-group mt-2\">\r\n        <sim-heb-datepicker [minDate]=\"getStartRental()\" [control]=\"orderForm.controls.endRental\"\r\n          [label]=\"'orders.modal.end_rental' | translate\"></sim-heb-datepicker>\r\n          <!-- <div *ngIf=\"error.isError\" class=\"text-danger\" >\r\n            {{ error.errorMessage }}\r\n         </div> -->\r\n      </div>\r\n\r\n      <div class=\"form-control-group mt-2\">\r\n        <label class=\"label\" for=\"totalRental\">{{ \"orders.modal.total_rental\" | translate }}:</label>\r\n        <input nbInput fullWidth readonly [value]=\"getTotalRental() || 0\" id=\"totalRental\"\r\n          [placeholder]=\"'orders.modal.placeholders.total_rental' | translate\">\r\n      </div>\r\n\r\n      <div class=\"form-control-group mt-2\">\r\n        <label class=\"label\" for=\"price\">{{ \"orders.modal.price\" | translate }}:</label>\r\n        <input nbInput fullWidth formControlName=\"price\" id=\"price\"\r\n          [placeholder]=\"'orders.modal.placeholders.price' | translate\">\r\n      </div>\r\n\r\n      <div class=\"form-control-group mt-2 mb-4\">\r\n        <sim-heb-datepicker [minDate]=\"getEndRental()\" [control]=\"orderForm.controls.returnDate\"\r\n          [label]=\"'orders.modal.return_date' | translate\"></sim-heb-datepicker>\r\n      </div>\r\n\r\n\r\n      <div class=\"d-flex justify-content-between\">\r\n\r\n        <button class=\"mb-2\" nbButton status=\"danger\" (click)=\"onCancel()\" type=\"button\">\r\n          {{ \"orders.modal.button_cancel\" | translate }}\r\n        </button>\r\n\r\n        <button class=\"mb-2\" nbButton status=\"primary\" [disabled]=\"!orderForm.valid\" type=\"submit\">\r\n          {{ \"orders.modal.button_submit\" | translate }}\r\n        </button>\r\n\r\n      </div>\r\n\r\n    </form>\r\n\r\n  </nb-layout-column>\r\n\r\n</nb-layout>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Order } from '@models/orders/order';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '@environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrdersService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getOrders(): Observable<Order[]> {\r\n    return this.http.get<Order[]>(environment.api_prefix + 'orders');\r\n  }\r\n\r\n  createOrder(order: Order): Observable<Order> {\r\n    return this.http.post<Order>(environment.api_prefix + 'orders', order);\r\n  }\r\n\r\n  updateOrder(order: Order): Observable<Order> {\r\n    return this.http.put<Order>(environment.api_prefix + `orders/${order.id}`, order)\r\n  }\r\n\r\n  deleteOrder(order: Order): Observable<Order> {\r\n    return this.http.delete<Order>(environment.api_prefix + `orders/${order.id}`);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}