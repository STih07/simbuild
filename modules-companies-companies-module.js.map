{"version":3,"sources":["./apps/sim/src/app/modules/companies/components/companies/companies.component.ts","./apps/sim/src/app/modules/companies/components/companies/companies.component.html","./apps/sim/src/app/modules/companies/companies.module.ts","./apps/sim/src/app/modules/companies/services/companies/companies.service.ts","./apps/sim/src/app/shared/server-data-source.ts","./apps/sim/src/app/modules/companies/components/company-manager/company-manager.component.ts","./apps/sim/src/app/modules/companies/components/company-manager/company-manager.component.html"],"names":[],"mappings":"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","file":"modules-companies-companies-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CompanyManagerComponent } from './../company-manager/company-manager.component';\r\nimport { Company } from '@models/companies/company';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { environment } from '@environments/environment';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslateService, TranslationChangeEvent } from '@ngx-translate/core';\r\nimport { DeleteModalComponent } from '@shared/components/delete-modal/delete-modal.component';\r\nimport { ServerDataSource } from 'ng2-smart-table';\r\nimport { CompaniesService } from '../../services/companies/companies.service';\r\nimport { CustomServerDataSource } from '@shared/server-data-source';\r\nimport { Country } from '@models/coutries/country';\r\n\r\n@Component({\r\n  selector: 'sim-companies',\r\n  templateUrl: './companies.component.html',\r\n  styleUrls: ['./companies.component.css']\r\n})\r\nexport class CompaniesComponent implements OnInit {\r\n  source: CustomServerDataSource;\r\n\r\n  settings: any;\r\n\r\n  constructor(private translateService: TranslateService, private modalService: NgbModal, private companiesSevice: CompaniesService, private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.translateService.onLangChange.subscribe((res: TranslationChangeEvent) => {\r\n      this.translateService.use(res.lang)\r\n      this.initTableSettings();\r\n    });\r\n    this.initTableSettings();\r\n    this.source = new CustomServerDataSource(\r\n      this.http, {\r\n      endPoint: environment.api_prefix + 'company',\r\n      totalKey: 'total',\r\n      dataKey: 'data',\r\n      pagerPageKey: 'page',\r\n      pagerLimitKey: 'limit'\r\n    }, [{key: 'join', value: 'country'}]);\r\n\r\n  }\r\n\r\n  onDeleteConfirm(event: any): void {\r\n    const deleteModal = this.modalService.open(DeleteModalComponent, {\r\n      centered: true\r\n    })\r\n    deleteModal.componentInstance.name = event.data.name;\r\n\r\n    deleteModal.result.then((result: boolean) => {\r\n      if (result) {\r\n        this.companiesSevice.deleteCompany(event.data).subscribe(() => this.loadCountries())\r\n      }\r\n    }).catch(err => { });\r\n\r\n  }\r\n\r\n  initTableSettings(): void {\r\n    this.settings = {\r\n      pager: {\r\n        display: true,\r\n        perPage: 20\r\n      },\r\n      actions: {\r\n        columnTitle: '',\r\n        edit: false\r\n      },\r\n      hideSubHeader: true,\r\n      delete: {\r\n        deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n        confirmDelete: true,\r\n        width: '20px'\r\n      },\r\n      columns: {\r\n        name: {\r\n          title: this.translateService.instant('companies.table.name'),\r\n          type: 'string'\r\n        },\r\n        country: {\r\n          title: this.translateService.instant('companies.table.country'),\r\n          type: 'string',\r\n          valuePrepareFunction: (val: Country) => val.name\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  openModal(companyData?: Company) {\r\n    const companyManager = this.modalService.open(CompanyManagerComponent, {\r\n      centered: true\r\n    })\r\n\r\n    if (companyData) {\r\n      companyManager.componentInstance.companyData = companyData;\r\n    }\r\n\r\n    companyManager.result.then((data: { company: Company; isCreate: boolean; }) => {\r\n\r\n      if (data) {\r\n\r\n        if (data.isCreate) {\r\n\r\n          this.companiesSevice.addCompany(data.company).subscribe(() => this.loadCountries())\r\n\r\n        } else {\r\n\r\n          this.companiesSevice.updateCompany(data.company).subscribe(() => this.loadCountries())\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }).catch(err => { })\r\n  }\r\n\r\n\r\n  loadCountries(): void {\r\n    this.source.refresh();\r\n  }\r\n\r\n}\r\n","<nb-card>\r\n  <nb-card-header>\r\n    <div class=\"d-flex justify-content-between align-items-center\">\r\n      {{ \"companies.title\" | translate}}\r\n      <button class=\"btn btn-sm btn-primary\" (click)=\"openModal()\">{{ 'companies.modal.button_open' | translate }}</button>\r\n    </div>\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table [settings]=\"settings\" [source]=\"source\" (deleteConfirm)=\"onDeleteConfirm($event)\" (userRowSelect)=\"openModal($event.data)\">\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CompaniesComponent } from './components/companies/companies.component';\r\nimport { CompanyManagerComponent } from './components/company-manager/company-manager.component';\r\nimport { CompaniesService } from './services/companies/companies.service';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NbLayoutModule, NbCardModule, NbIconModule, NbInputModule, NbButtonModule, NbSelectModule } from '@nebular/theme';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: CompaniesComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [CompaniesComponent, CompanyManagerComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    TranslateModule,\r\n    NbLayoutModule,\r\n    NbCardModule,\r\n    NbIconModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbSelectModule,\r\n    Ng2SmartTableModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [CompaniesService]\r\n})\r\nexport class CompaniesModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '@environments/environment';\r\nimport { Company } from '@models/companies/company';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompaniesService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCompanies(): Observable<{ data: Company[]}> {\r\n    return this.http.get<{ data: Company[] }>(environment.api_prefix + 'company');\r\n  }\r\n\r\n  addCompany(company: Company): Observable<Company> {\r\n    return this.http.post<Company>(environment.api_prefix + 'company', company);\r\n  }\r\n\r\n  updateCompany(company: Company): Observable<Company> {\r\n    return this.http.put<Company>(environment.api_prefix + `company/${company.id}`, company)\r\n  }\r\n\r\n  deleteCompany(company: Company): Observable<Company> {\r\n    return this.http.delete<Company>(environment.api_prefix + `company/${company.id}`);\r\n  }\r\n}\r\n","import { ServerDataSource } from 'ng2-smart-table';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ServerSourceConf } from 'ng2-smart-table/lib/lib/data-source/server/server-source.conf';\r\n\r\nexport class CustomServerDataSource extends ServerDataSource {\r\n\r\n  public params: {key: any; value: any }[];\r\n  protected requestElements(): Observable<any> {\r\n    let params = this.createRequesParams();\r\n    for (const obj of this.params) {\r\n        params = params.append(obj.key, obj.value);\r\n    }\r\n    return this.http.get(this.conf.endPoint, { params, observe: 'response' });\r\n  }\r\n\r\n  constructor(http: HttpClient, conf: ServerSourceConf | {}, params: {key: any; value: any }[]) {\r\n    super(http, conf);\r\n    this.params = params;\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Country } from '@models/coutries/country';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CountriesService } from '../../../countries/services/countries/countries.service';\r\n\r\n@Component({\r\n  selector: 'sim-company-manager',\r\n  templateUrl: './company-manager.component.html',\r\n  styleUrls: ['./company-manager.component.css']\r\n})\r\nexport class CompanyManagerComponent implements OnInit {\r\n\r\n  @Input() companyData?: Country;\r\n\r\n  countries$ = this.countriesService.getCountries();\r\n  companyForm: FormGroup\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private activeModal: NgbActiveModal,\r\n    private countriesService: CountriesService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.companyForm = this.fb.group({\r\n      name: [this.companyData?.name, [Validators.maxLength(50), Validators.required]],\r\n      country: [this.companyData?.name, [Validators.required]],\r\n    })\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const resultData = this.companyForm.value;\r\n    resultData.id = this.companyData?.id;\r\n    this.activeModal.close({ company: resultData, isCreate: this.companyData ? false : true });\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.activeModal.close();\r\n  }\r\n\r\n}\r\n","<nb-layout class=\"company-modal__wrapper\">\r\n\r\n  <nb-layout-column class=\"bg-white\">\r\n\r\n    <h4>{{ companyData ? ('companies.modal.title_edit' | translate) : ('companies.modal.title_create' | translate) }}</h4>\r\n\r\n    <form [formGroup]=\"companyForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n      <div class=\"form-control-group mt-2 mb-4\">\r\n\r\n        <label class=\"label\" for=\"name\">{{ \"companies.modal.name\" | translate }}:</label>\r\n\r\n        <input nbInput fullWidth formControlName=\"name\" id=\"name\"\r\n          [class.border-danger]=\"companyForm.controls.name.touched && companyForm.controls.name.invalid\"\r\n          [placeholder]=\"'companies.modal.placeholders.name' | translate\">\r\n\r\n        <!-- <nb-select fullWidth placeholder=\"Form control\" [formControl]=\"companyForm.controls.name\" id=\"name\"\r\n          [class.border-danger]=\"companyForm.controls.name.touched && companyForm.controls.name.invalid\"\r\n          [placeholder]=\"'companies.modal.placeholders.name' | translate\">\r\n          <nb-option *ngFor=\"let role of roles\" [value]=\"role\">{{role}}</nb-option>\r\n        </nb-select> -->\r\n\r\n        <sim-error-validator [control]=\"companyForm.controls.name\"></sim-error-validator>\r\n\r\n      </div>\r\n\r\n      <div class=\"form-control-group mt-2 mb-4\">\r\n\r\n        <label class=\"label\" for=\"country\">{{ \"companies.modal.country\" | translate }}:</label>\r\n\r\n        <div>\r\n          <nb-select fullWidth [formControl]=\"companyForm.controls.country\">\r\n            <nb-option *ngFor=\"let country of countries$ | async\" [value]=\"country.id\">{{country.name}}</nb-option>\r\n          </nb-select>\r\n        </div>\r\n<!--        <input nbInput fullWidth formControlName=\"country\" id=\"country\"-->\r\n<!--          [class.border-danger]=\"companyForm.controls.country.touched && companyForm.controls.country.invalid\"-->\r\n<!--          [placeholder]=\"'countries.modal.placeholders.country' | translate\">-->\r\n\r\n        <!-- <nb-select fullWidth placeholder=\"Form control\" [formControl]=\"companyForm.controls.name\" id=\"name\"\r\n          [class.border-danger]=\"companyForm.controls.name.touched && companyForm.controls.name.invalid\"\r\n          [placeholder]=\"'companies.modal.placeholders.name' | translate\">\r\n          <nb-option *ngFor=\"let role of roles\" [value]=\"role\">{{role}}</nb-option>\r\n        </nb-select> -->\r\n\r\n      </div>\r\n\r\n\r\n      <div class=\"d-flex justify-content-between\">\r\n\r\n        <button class=\"mb-2\" nbButton status=\"danger\" (click)=\"onCancel()\" type=\"button\">\r\n          {{ \"companies.modal.button_cancel\" | translate }}\r\n        </button>\r\n\r\n        <button class=\"mb-2\" nbButton status=\"primary\" [disabled]=\"!companyForm.valid\" type=\"submit\">\r\n          {{ \"companies.modal.button_submit\" | translate }}\r\n        </button>\r\n\r\n      </div>\r\n\r\n\r\n    </form>\r\n\r\n  </nb-layout-column>\r\n\r\n</nb-layout>\r\n"],"sourceRoot":"webpack:///"}